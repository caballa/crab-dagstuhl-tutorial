eBPF bytecode

// Precondition: data = *(u32*)(r1+76)
// Precondition: data_end = *(u32*)(r1+80)

1: r5 = ...
2: r3 = *(u32 *) (r1+80)
3: r1 = *(u32 *) (r1+76)
4: r2 = r1 + r5
5: if r2<r1 goto EXIT
6: r2 = r2 + 8
7: if r2>r3 goto EXIT
8: r1 = r1 + r5
assert r1>=data && r1<=data_end-8
9: *(u64 *)(r1) = 0
EXIT: exit
